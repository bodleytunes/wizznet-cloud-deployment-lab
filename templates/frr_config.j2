{% set hostvars = salt['pillar.get'](opts.id) %}

{%- set bridge_interfaces = salt['pillar.get'](opts.id+':interface_networks'), [] %}

{%- set zt_peers = salt['pillar.get'](opts.id+':frr:zt:peers'), [] %}
{%- set evpn_peers = salt['pillar.get'](opts.id+':frr:evpn:peers') %}

{#
# some funky stuff to get the zt interface into a variable - needs sorting/tidying
{% set zt_interface_cmd_return_value = salt['cmd.shell']('$(ip -br a | awk "{print $1}" | grep zt)') %}
{% set zt_interface = zt_interface_cmd_return_value.split(' ') %}
{% set zt_interface_result1 = zt_interface[2] %}
{% set zt_interface_result2 = zt_interface_result1.split(':') %}

^ superseeded by custom grain in _grains to get zt interface
#}


interface {{ hostvars.interface_names.evpn }}
 ip ospf area 0

!
interface {{ hostvars.interface_names.lxd0 }}
 ip ospf area 0
 ip ospf bfd
!
interface {{ salt['grains.get']('zt_interface_name') }}
 ip ospf area 0
!
router bgp {{ hostvars.bgp_as }}
 bgp router-id {{ hostvars.router_id }}
 no bgp ebgp-requires-policy
 neighbor bgpdump peer-group
 neighbor bgpdump remote-as internal
 neighbor bgpdump capability extended-nexthop
 neighbor client peer-group
 neighbor client remote-as internal
 neighbor client bfd
 neighbor client disable-connected-check
 neighbor client timers 1 3
 neighbor client capability extended-nexthop
 neighbor evpn-peer peer-group
 neighbor evpn-peer bfd
 neighbor evpn-peer disable-connected-check
 neighbor evpn-peer capability extended-nexthop
 neighbor evpn-peer ebgp-multihop
 {% for peer in hostvars.frr.evpn.peers %}
 neighbor {{ peer.ip }} peer-group evpn-peer
 {% endfor %}
 neighbor loopback-learn peer-group
 neighbor loopback-learn remote-as internal
 neighbor loopback-learn bfd
 neighbor loopback-learn timers 1 3
 neighbor rancher-kubernetes peer-group
 neighbor rancher-kubernetes remote-as external
 neighbor rancher-kubernetes disable-connected-check
 neighbor rancher-kubernetes timers 1 3
 neighbor rancher-kubernetes capability extended-nexthop
 neighbor zt peer-group
 neighbor zt remote-as external
 neighbor zt bfd
 neighbor zt disable-connected-check
 neighbor zt timers 1 3
 {% for peer in evpn_peers %}
 neighbor {{ peer.ip }} remote-as {{ peer.bgp_peer_as }}
 {% endfor %}

 {% for items in zt_peers %}
 {% for peer in items %}
 neighbor {{ peer.ip }} peer-group {{ peer.peer_group_name }}
 {% endfor %}
 {% endfor %}

 {% for items in bridge_interfaces %}
 {% for peer in items %}
 {% if "lxdbr" in peer.name %}
 bgp listen range {{ peer.subnet }}{{ peer.mask }} peer-group rancher-kubernetes
  {% endif %}
  {% endfor %}
  {% endfor %}
 !
 address-family ipv4 unicast
  network {{ hostvars.interface_networks[0].subnet }}{{ hostvars.interface_networks[0].mask }}
  network {{ hostvars.interface_networks[1].subnet }}{{ hostvars.interface_networks[1].mask }}
  neighbor client soft-reconfiguration inbound
  neighbor evpn-peer soft-reconfiguration inbound
  neighbor rancher-kubernetes soft-reconfiguration inbound
{#  neighbor evpn-peer weight 2 #}
  neighbor loopback-learn soft-reconfiguration inbound
  neighbor zt soft-reconfiguration inbound
 exit-address-family
 !
 address-family l2vpn evpn
  neighbor evpn-peer activate
  neighbor evpn-peer soft-reconfiguration inbound
  advertise-all-vni
  advertise-svi-ip
 exit-address-family
!
router ospf
 ospf router-id {{ hostvars.router_id }}
 passive-interface default
 no passive-interface {{ hostvars.interface_names.lxd0 }}
 no passive-interface {{ salt['grains.get']('zt_interface_name') }} 
!
!
!
line vty

